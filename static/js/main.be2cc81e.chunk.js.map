{"version":3,"sources":["core/constants/route.constants.tsx","core/components/PrivateRoute/PrivateRoute.tsx","core/components/Form/Form.tsx","core/components/FormButton/FormButton.tsx","core/components/ModalButton/ModalButton.tsx","core/components/Modal/Modal.tsx","core/constants/auth.constants.tsx","core/helpers/history.tsx","firebase.tsx","core/services/firebase.auth.service.tsx","core/actions/auth.actions.tsx","core/components/Loader/Loader.tsx","pages/Signin/Signin.tsx","pages/Register/Register.tsx","core/components/PaintButton/PaintButton.tsx","assets/img/picture.svg","assets/img/logout.svg","core/components/SignoutButton/SignoutButton.tsx","core/constants/draw.constants.tsx","core/actions/draw.actions.tsx","pages/Paint/components/NavBar/NavBar.tsx","pages/Paint/components/ColorBar/ColorBar.tsx","assets/img/pencil.svg","pages/Paint/components/PaintBrush/PaintBrush.tsx","assets/img/circle.svg","pages/Paint/components/Circle/Circle.tsx","assets/img/line.svg","pages/Paint/components/Line/Line.tsx","assets/img/hexagon.svg","pages/Paint/components/Hexagon/Hexagon.tsx","assets/img/rectangle.svg","pages/Paint/components/Rectangle/Rectangle.tsx","assets/img/star.svg","pages/Paint/components/Star/Star.tsx","assets/img/points.svg","pages/Paint/components/ShapeBar/ShapeBar.tsx","pages/Paint/components/SizeBar/SizeBar.tsx","pages/Paint/components/DrawBar/DrawBar.tsx","core/services/firebase.db.service.tsx","assets/img/disk.svg","pages/Paint/components/SaveButton/SaveButton.tsx","core/services/draw.service.tsx","assets/img/trash.svg","pages/Paint/components/PaintToolBar/PaintToolBar.tsx","pages/Paint/components/MainView/MainView.tsx","pages/Paint/Paint.tsx","core/constants/show.constants.tsx","core/actions/show.actions.tsx","pages/Gallery/components/GalleryList/GalleryList.tsx","core/reducers/auth.reducer.tsx","core/reducers/draw.reducer.tsx","core/reducers/show.reducer.tsx","core/reducers/root.reducer.tsx","core/helpers/store.tsx","pages/Gallery/components/Filter/Filter.tsx","pages/Gallery/components/GalleryToolBar/GalleryToolBar.tsx","pages/Gallery/Gallery.tsx","App.tsx","index.tsx"],"names":["routeConstants","connect","user","authReducer","Component","component","rest","render","props","to","SIGNIN","Form","onSubmit","onChange","children","className","type","name","placeholder","required","React","memo","FormButton","value","ModalButton","onClick","Modal","text","authConstants","history","createHashHistory","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","auth","firebaseAuthService","signin","email","password","signInWithEmailAndPassword","register","createUserWithEmailAndPassword","signout","signOut","toastId","authActions","dispatch","request","then","uid","success","push","GALLERY","catch","message","error","toast","isActive","position","POSITION","TOP_CENTER","SIGNOUT","REQUEST","SUCCESS","payload","ERROR","configure","Loader","Signin","loading","useState","setEmail","setPassword","useDispatch","handleChange","useCallback","target","handleSubmit","event","preventDefault","handleClick","REGISTER","Register","confirmation","setConfirmation","useRef","current","PaintButton","tool","isShowedSizeBar","isShowedShapeBar","useMemo","result","drawReducer","SignoutButton","handleSignoutClick","src","logout_img","alt","drawConstants","drawActions","noTool","NO_TOOL","paintbrush","PAINTBRUSH","startDraw","START_DRAW","stopDraw","STOP_DRAW","setColor","color","SET_COLOR","showSizeBar","SHOW_SIZE_BAR","hideSizeBar","HIDE_SIZE_BAR","setSize","size","SET_SIZE","showShapeBar","SHOW_SHAPE_BAR","hideShapeBar","HIDE_SHAPE_BAR","line","LINE","rectangle","RECTANGLE","circle","CIRCLE","star","STAR","hexagon","HEXAGON","setImg","img","SET_IMG","deleteImg","DELETE_IMG","setContext","context","SET_CONTEXT","clear","CLEAR","NavBar","a","picture","ColorBar","PaintBrush","pencil","Circle","Line","Hexagon","Rectangle","Star","points","min","max","DrawBar","firebaseDbService","sendImg","onImages","image","ref","child","Promise","resolve","on","snapshot","data","val","SaveButton","isClean","currentImg","info","disk","drawService","redraw","addPoint","clearFromPaintbrush","splice","length","clearCanvas","drawPoint","mouseX","mouseY","drawImage","drawLine","startX","startY","lineWidth","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","drawCircle","width","height","kappa","ox","oy","xe","ye","xm","ym","fillStyle","bezierCurveTo","fill","drawRectangle","fillRect","createImg","canvas","toDataURL","Image","drawStar","outerRadius","step","Math","PI","rot","x","y","Array","forEach","cos","sin","drawHexagon","sideLength","hexagonAngle","hexHeight","hexRadius","hexRectangleWidth","hexRectangleHeight","createContext","getContext","globalCompositeOperation","lineJoin","point","index","arr","drag","pointX","pointY","clearRect","PaintToolBar","trash","isDraw","canvasRef","mainviewRef","handleMouseUp","handleResize","clientWidth","clientHeight","useEffect","window","innerHeight","innerWidth","addEventListener","removeEventListener","document","id","onMouseDown","clientX","clientY","offsetLeft","offsetTop","onMouseMove","onMouseUp","onMouseLeave","Paint","showConstants","showActions","getImages","SUCCESS_DOWNLOAD","successDownload","filterImages","key","FILTER_IMAGES","setImages","images","SET_IMAGES","GalleryList","filtredKey","imgList","filteredImages","Object","values","filter","item","map","i","undefined","createImgList","last","querySelector","scrollIntoView","block","inline","showReducer","initState","filtredImages","rootReducer","combineReducers","state","action","store","createStore","applyMiddleware","thunk","Filter","options","emails","from","Set","createOptions","GalleryToolBar","PAINT","Gallery","App","exact","path","ReactDOM"],"mappings":"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","file":"static/js/main.be2cc81e.chunk.js","sourcesContent":["export enum routeConstants {\n  SIGNIN = '/signin',\n  REGISTER = '/register',\n  GALLERY = '/',\n  PAINT = '/paint',\n}\n","import { Route } from 'react-router-dom';\nimport { Redirect, RouteProps } from 'react-router';\nimport { connect } from 'react-redux';\nimport { routeConstants } from '../../constants/route.constants';\nimport { RootSate } from '../../reducers/root.reducer';\nimport { User } from '../../actions/auth.actions';\nimport { MemoExoticComponent } from 'react';\n\nexport interface PrivateRouteProps {\n  component: MemoExoticComponent<() => JSX.Element>;\n  user: User;\n}\n\nfunction PrivateRoute({ user, component: Component, ...rest }: PrivateRouteProps & RouteProps): JSX.Element {\n  return (\n    <Route\n      {...rest}\n      render={(props) => (user ? <Component {...props} /> : <Redirect to={routeConstants.SIGNIN} />)}\n    ></Route>\n  );\n}\n\nfunction mapStateToProps({ authReducer: { user } }: RootSate) {\n  return { user };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport './Form.scss';\n\ninterface FormProps {\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  children?: JSX.Element | Array<JSX.Element>;\n}\n\nfunction Form({ onSubmit, onChange, children }: FormProps) {\n  return (\n    <form className=\"form\" onSubmit={onSubmit}>\n      <input className=\"form__email\" type=\"email\" name=\"email\" placeholder=\"email\" onChange={onChange} required />\n      <input\n        className=\"form__password\"\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"password\"\n        onChange={onChange}\n        required\n      />\n      {children}\n    </form>\n  );\n}\n\nexport default React.memo(Form);\n","import React from 'react';\nimport './FormButton.scss';\n\ninterface FormButtonProps {\n  value: string;\n}\n\nfunction FormButton({ value }: FormButtonProps): JSX.Element {\n  return <input className=\"form-btn\" type=\"submit\" value={value} />;\n}\n\nexport default React.memo(FormButton);\n","import React from 'react';\nimport './ModalButton.scss';\n\ninterface ModalButtonProps {\n  value?: string;\n  onClick?: () => void;\n}\n\nfunction ModalButton({ value, onClick }: ModalButtonProps) {\n  return (\n    <button className=\"modal-btn\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default React.memo(ModalButton);\n","import React from 'react';\nimport ModalButton from '../ModalButton/ModalButton';\nimport './Modal.scss';\n\ninterface ModalProps {\n  children?: JSX.Element;\n  text?: string;\n  value?: string;\n  onSubmit?: () => void;\n  onClick?: () => void;\n}\n\nfunction Modal({ children, text, value, onClick }: ModalProps) {\n  return (\n    <div className=\"modal\">\n      {children}\n      <div className=\"modal__footer\">\n        <span className=\"modal__text\">{text}</span>\n        <ModalButton value={value} onClick={onClick} />\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Modal);\n","export enum authConstants {\n  SIGNOUT = 'SIGNOUT',\n  REQUEST = 'REQUEST',\n  SUCCESS = 'SUCCESS',\n  ERROR = 'ERROR',\n}\n","import { createHashHistory } from 'history';\n\nexport const history = createHashHistory();\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nexport const app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const database = app.database();\nexport const auth = app.auth();\n","import { auth } from '../../firebase';\nimport firebase from 'firebase/app';\n\nexport const firebaseAuthService = {\n  signin,\n  register,\n  signout,\n};\n\nexport type UserCredential = firebase.auth.UserCredential;\n\nfunction signin(email: string, password: string): Promise<UserCredential> {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\nfunction register(email: string, password: string): Promise<UserCredential> {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\nfunction signout(): Promise<void> {\n  return auth.signOut();\n}\n","import { authConstants } from '../constants/auth.constants';\nimport { routeConstants } from '../constants/route.constants';\nimport { history } from '../helpers/history';\nimport { firebaseAuthService, UserCredential } from '../services/firebase.auth.service';\nimport { Id, toast } from 'react-toastify';\nimport { ThunkAction } from 'redux-thunk';\nimport { AuthState } from '../reducers/auth.reducer';\nimport { Dispatch } from '../helpers/store';\n\nexport const authActions = {\n  signin,\n  register,\n  signout,\n};\n\nexport interface User {\n  email: string;\n  uid: string;\n}\n\ntoast.configure();\nlet toastId: Id;\n\ninterface RequestAction {\n  type: typeof authConstants.REQUEST;\n}\n\ninterface SuccessAction {\n  type: typeof authConstants.SUCCESS;\n  payload: User | null;\n}\n\ninterface ErrorAction {\n  type: typeof authConstants.ERROR;\n}\n\ninterface SignoutAction {\n  type: typeof authConstants.SIGNOUT;\n}\n\nexport type AuthAction = RequestAction | SuccessAction | ErrorAction | SignoutAction;\n\nexport type AuthThunkAction = ThunkAction<void, AuthState, unknown, AuthAction>;\n\nfunction request(): RequestAction {\n  return { type: authConstants.REQUEST };\n}\n\nfunction success(user: User | null): SuccessAction {\n  return {\n    type: authConstants.SUCCESS,\n    payload: user,\n  };\n}\n\nfunction error(): ErrorAction {\n  return { type: authConstants.ERROR };\n}\n\nfunction signin(email: string, password: string): AuthThunkAction {\n  return (dispatch: Dispatch) => {\n    dispatch(request());\n\n    firebaseAuthService\n      .signin(email, password)\n      .then(({ user }: UserCredential) => {\n        if (user) {\n          const { uid, email } = user;\n          dispatch(success({ uid, email: email || 'unknowk' }));\n          history.push(routeConstants.GALLERY);\n        }\n      })\n      .catch(({ message }) => {\n        dispatch(error());\n\n        if (!toast.isActive(toastId)) {\n          toastId = toast.error(message, { position: toast.POSITION.TOP_CENTER });\n        }\n      });\n  };\n}\n\nfunction register(email: string, password: string): AuthThunkAction {\n  return (dispatch) => {\n    dispatch(request());\n\n    firebaseAuthService\n      .register(email, password)\n      .then(({ user }: UserCredential) => {\n        if (user) {\n          const { uid, email } = user;\n          dispatch(success({ uid, email: email || 'unknowk' }));\n          history.push(routeConstants.GALLERY);\n        }\n      })\n      .catch(({ message }) => {\n        dispatch(error());\n\n        if (!toast.isActive(toastId)) {\n          toastId = toast.error(message, { position: toast.POSITION.TOP_CENTER });\n        }\n      });\n  };\n}\n\nfunction signout(): AuthThunkAction {\n  return (dispatch) => {\n    firebaseAuthService.signout().then(() => {\n      dispatch({ type: authConstants.SIGNOUT });\n    });\n  };\n}\n","import './Loader.scss';\n\nfunction Loader(): JSX.Element {\n  return <div className=\"loader\">Loading...</div>;\n}\n\nexport default Loader;\n","import './Signin.scss';\nimport Form from '../../core/components/Form/Form';\nimport FormButton from '../../core/components/FormButton/FormButton';\nimport Modal from '../../core/components/Modal/Modal';\nimport React, { ChangeEvent, useCallback, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { authActions } from '../../core/actions/auth.actions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from '../../core/components/Loader/Loader';\nimport { history } from '../../core/helpers/history';\nimport { routeConstants } from '../../core/constants/route.constants';\nimport { RootSate } from '../../core/reducers/root.reducer';\n\nconst FORM_BTN_VALUE = 'sign in';\nconst MODAL_BTN_VALUE = 'register';\nconst MODAL_TEXT = 'Need an account?';\n\ntoast.configure();\n\ninterface SigninProps {\n  loading: boolean;\n}\n\nfunction Signin({ loading }: SigninProps): JSX.Element {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = useCallback(({ target: { name, value } }: ChangeEvent<HTMLInputElement>) => {\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  }, []);\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      dispatch(authActions.signin(email, password));\n    },\n    [email, password, dispatch],\n  );\n\n  const handleClick = useCallback(() => {\n    history.push(routeConstants.REGISTER);\n  }, []);\n\n  return (\n    <div className=\"signin\">\n      {loading && <Loader />}\n      <ToastContainer />\n      <Modal text={MODAL_TEXT} value={MODAL_BTN_VALUE} onClick={handleClick}>\n        <Form onChange={handleChange} onSubmit={handleSubmit}>\n          <FormButton value={FORM_BTN_VALUE} />\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n\nfunction mapStateToProps({ authReducer: { loading } }: RootSate) {\n  return { loading };\n}\n\nexport default connect(mapStateToProps)(React.memo(Signin));\n","import React, { ChangeEvent, useCallback, useRef, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { authActions } from '../../core/actions/auth.actions';\nimport Form from '../../core/components/Form/Form';\nimport FormButton from '../../core/components/FormButton/FormButton';\nimport Loader from '../../core/components/Loader/Loader';\nimport Modal from '../../core/components/Modal/Modal';\nimport { routeConstants } from '../../core/constants/route.constants';\nimport { history } from '../../core/helpers/history';\nimport { RootSate } from '../../core/reducers/root.reducer';\nimport './Register.scss';\n\nconst MODAL_TEXT = 'Already have an account?';\nconst MODAL_BTN_VALUE = 'sign in';\nconst FORM_BTN_VALUE = 'register';\nconst ERROR_TEXT = 'Passwords do not match';\n\ntoast.configure();\n\ninterface RegisterProps {\n  loading: boolean;\n}\n\nfunction Register({ loading }: RegisterProps) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmation, setConfirmation] = useState('');\n  const toastId = useRef('');\n  const dispatch = useDispatch();\n\n  const handleChange = useCallback(({ target: { name, value } }: ChangeEvent<HTMLInputElement>) => {\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    } else if (name === 'confirmation') {\n      setConfirmation(value);\n    }\n  }, []);\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      if (password === confirmation) {\n        dispatch(authActions.register(email, password));\n      } else {\n        if (!toast.isActive(toastId.current)) {\n          toast.error(ERROR_TEXT, { position: toast.POSITION.TOP_CENTER });\n        }\n      }\n    },\n    [email, password, confirmation, dispatch],\n  );\n\n  const handleClick = () => {\n    history.push(routeConstants.SIGNIN);\n  };\n\n  return (\n    <div className=\"register\">\n      {loading && <Loader />}\n      <ToastContainer />\n      <Modal text={MODAL_TEXT} value={MODAL_BTN_VALUE} onClick={handleClick}>\n        <Form onChange={handleChange} onSubmit={handleSubmit}>\n          <input\n            className=\"confirmation\"\n            type=\"password\"\n            name=\"confirmation\"\n            placeholder=\"confirm password\"\n            onChange={handleChange}\n          />\n          <FormButton value={FORM_BTN_VALUE} />\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ authReducer: { loading } }: RootSate) => {\n  return { loading };\n};\n\nexport default connect(mapStateToProps)(React.memo(Register));\n","import './PaintButton.scss';\nimport { connect } from 'react-redux';\nimport React, { MouseEventHandler, useMemo } from 'react';\nimport { RootSate } from '../../reducers/root.reducer';\n\ninterface PaintButtonProps {\n  tool: string;\n  isShowedSizeBar: boolean;\n  isShowedShapeBar: boolean;\n  name?: string;\n  children?: JSX.Element | string;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n}\n\nfunction PaintButton({ tool, isShowedSizeBar, name, children, isShowedShapeBar, onClick }: PaintButtonProps) {\n  const className = useMemo(() => {\n    let result = 'paint-btn';\n\n    if (name === tool || (name === 'size-bar' && isShowedSizeBar) || (name === 'shape-bar' && isShowedShapeBar)) {\n      result += ' active';\n    }\n\n    return result;\n  }, [name, tool, isShowedShapeBar, isShowedSizeBar]);\n\n  return (\n    <button type=\"button\" className={className} name={name} onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { tool, isShowedSizeBar, isShowedShapeBar } }: RootSate) {\n  return { tool, isShowedSizeBar, isShowedShapeBar };\n}\n\nexport default connect(mapStateToProps)(React.memo(PaintButton));\n","export default __webpack_public_path__ + \"static/media/picture.082f3262.svg\";","export default __webpack_public_path__ + \"static/media/logout.58dee8cf.svg\";","import React, { useCallback } from 'react';\nimport PaintButton from '../PaintButton/PaintButton';\nimport logout_img from '../../../assets/img/logout.svg';\nimport { useDispatch } from 'react-redux';\nimport { authActions } from '../../actions/auth.actions';\n\nfunction SignoutButton() {\n  const dispatch = useDispatch();\n\n  const handleSignoutClick = useCallback(() => {\n    dispatch(authActions.signout());\n  }, [dispatch]);\n\n  return (\n    <PaintButton onClick={handleSignoutClick}>\n      <img src={logout_img} alt=\"\" />\n    </PaintButton>\n  );\n}\n\nexport default React.memo(SignoutButton);\n","export enum drawConstants {\n  NO_TOOL = 'NO_TOOL',\n  PAINTBRUSH = 'PAINTBRUSH',\n  LINE = 'LINE',\n  RECTANGLE = 'RECTANGLE',\n  CIRCLE = 'CIRCLE',\n  STAR = 'STAR',\n  HEXAGON = 'HEXAGON',\n  START_DRAW = 'STARTDRAW',\n  STOP_DRAW = 'STOP_DRAW',\n  SET_COLOR = 'SET_COLOR',\n  SHOW_SIZE_BAR = 'SHOW_SIZE_BAR',\n  HIDE_SIZE_BAR = 'HIDE_SIZE_BAR',\n  SET_SIZE = 'SET_SIZE',\n  SHOW_SHAPE_BAR = 'SHOW_SHAPE_BAR',\n  HIDE_SHAPE_BAR = 'HIDE_SHAPE_BAR',\n  SET_IMG = 'SET_IMG',\n  DELETE_IMG = 'DELETE_IMG',\n  SET_CONTEXT = 'SET_CONTEXT',\n  CLEAR = 'CLEAR',\n}\n","import { drawConstants } from '../constants/draw.constants';\n\nexport const drawActions = {\n  noTool,\n  paintbrush,\n  startDraw,\n  stopDraw,\n  setColor,\n  showSizeBar,\n  hideSizeBar,\n  setSize,\n  showShapeBar,\n  hideShapeBar,\n  line,\n  rectangle,\n  circle,\n  star,\n  hexagon,\n  setImg,\n  deleteImg,\n  setContext,\n  clear,\n};\n\ninterface NoToolAction {\n  type: typeof drawConstants.NO_TOOL;\n}\n\ninterface PaintbrushAction {\n  type: typeof drawConstants.PAINTBRUSH;\n}\n\ninterface StartDrawAction {\n  type: typeof drawConstants.START_DRAW;\n}\n\ninterface StopDrawAction {\n  type: typeof drawConstants.STOP_DRAW;\n}\n\ninterface SetColorAction {\n  type: typeof drawConstants.SET_COLOR;\n  payload: string;\n}\n\ninterface ShowSizeBarAction {\n  type: typeof drawConstants.SHOW_SIZE_BAR;\n}\n\ninterface HideSizeBarAction {\n  type: typeof drawConstants.HIDE_SIZE_BAR;\n}\n\ninterface SetSizeAction {\n  type: typeof drawConstants.SET_SIZE;\n  payload: string;\n}\n\ninterface ShowShapeBarAction {\n  type: typeof drawConstants.SHOW_SHAPE_BAR;\n}\n\ninterface HideShapeBarAction {\n  type: typeof drawConstants.HIDE_SHAPE_BAR;\n}\n\ninterface LineAction {\n  type: typeof drawConstants.LINE;\n}\n\ninterface RectangleAction {\n  type: typeof drawConstants.RECTANGLE;\n}\n\ninterface CircleAction {\n  type: typeof drawConstants.CIRCLE;\n}\n\ninterface SetImgAction {\n  type: typeof drawConstants.SET_IMG;\n  payload: HTMLImageElement;\n}\n\ninterface DeleteImgAction {\n  type: typeof drawConstants.DELETE_IMG;\n}\n\ninterface SetContextAction {\n  type: typeof drawConstants.SET_CONTEXT;\n  payload: CanvasRenderingContext2D | null;\n}\n\ninterface StarAction {\n  type: typeof drawConstants.STAR;\n}\n\ninterface HexagonAction {\n  type: typeof drawConstants.HEXAGON;\n}\n\ninterface ClearAction {\n  type: typeof drawConstants.CLEAR;\n}\n\nfunction noTool(): NoToolAction {\n  return { type: drawConstants.NO_TOOL };\n}\n\nfunction paintbrush(): PaintbrushAction {\n  return { type: drawConstants.PAINTBRUSH };\n}\n\nfunction startDraw(): StartDrawAction {\n  return { type: drawConstants.START_DRAW };\n}\n\nfunction stopDraw(): StopDrawAction {\n  return { type: drawConstants.STOP_DRAW };\n}\n\nfunction setColor(color: string): SetColorAction {\n  return {\n    type: drawConstants.SET_COLOR,\n    payload: color,\n  };\n}\n\nfunction showSizeBar(): ShowSizeBarAction {\n  return { type: drawConstants.SHOW_SIZE_BAR };\n}\n\nfunction hideSizeBar(): HideSizeBarAction {\n  return { type: drawConstants.HIDE_SIZE_BAR };\n}\n\nfunction setSize(size: string): SetSizeAction {\n  return {\n    type: drawConstants.SET_SIZE,\n    payload: size,\n  };\n}\n\nfunction showShapeBar(): ShowShapeBarAction {\n  return { type: drawConstants.SHOW_SHAPE_BAR };\n}\n\nfunction hideShapeBar(): HideShapeBarAction {\n  return { type: drawConstants.HIDE_SHAPE_BAR };\n}\n\nfunction line(): LineAction {\n  return { type: drawConstants.LINE };\n}\n\nfunction rectangle(): RectangleAction {\n  return { type: drawConstants.RECTANGLE };\n}\n\nfunction circle(): CircleAction {\n  return { type: drawConstants.CIRCLE };\n}\n\nfunction star(): StarAction {\n  return { type: drawConstants.STAR };\n}\n\nfunction hexagon(): HexagonAction {\n  return { type: drawConstants.HEXAGON };\n}\n\nfunction setImg(img: HTMLImageElement): SetImgAction {\n  return {\n    type: drawConstants.SET_IMG,\n    payload: img,\n  };\n}\n\nfunction deleteImg(): DeleteImgAction {\n  return { type: drawConstants.DELETE_IMG };\n}\n\nfunction setContext(context: CanvasRenderingContext2D | null): SetContextAction {\n  return {\n    type: drawConstants.SET_CONTEXT,\n    payload: context,\n  };\n}\n\nfunction clear(): ClearAction {\n  return { type: drawConstants.CLEAR };\n}\n\nexport type DrawActions =\n  | PaintbrushAction\n  | StartDrawAction\n  | StopDrawAction\n  | NoToolAction\n  | SetColorAction\n  | ShowSizeBarAction\n  | HideSizeBarAction\n  | SetSizeAction\n  | ShowShapeBarAction\n  | HideShapeBarAction\n  | LineAction\n  | RectangleAction\n  | CircleAction\n  | StarAction\n  | HexagonAction\n  | SetImgAction\n  | DeleteImgAction\n  | SetContextAction\n  | ClearAction;\n","import { connect } from 'react-redux';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport './NavBar.scss';\nimport picture from '../../../../assets/img/picture.svg';\nimport { history } from '../../../../core/helpers/history';\nimport { routeConstants } from '../../../../core/constants/route.constants';\nimport SignoutButton from '../../../../core/components/SignoutButton/SignoutButton';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport React, { useCallback } from 'react';\n\ninterface NavBarProps {\n  dispatch: Dispatch;\n  img: HTMLImageElement;\n}\n\nfunction NavBar({ dispatch, img }: NavBarProps): JSX.Element {\n  const handleClick = useCallback(async () => {\n    dispatch(drawActions.deleteImg());\n    dispatch(drawActions.clear());\n    history.push(routeConstants.GALLERY);\n  }, [dispatch]);\n\n  return (\n    <ul className=\"navbar\">\n      <li className=\"navbar__item\">\n        <SignoutButton />\n      </li>\n      <li className=\"navbar__item\">\n        <PaintButton onClick={handleClick}>\n          <img src={picture} alt=\"\" />\n        </PaintButton>\n      </li>\n    </ul>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { img, dispatch } }: RootSate) {\n  return { dispatch, img };\n}\n\nexport default connect(mapStateToProps)(React.memo(NavBar));\n","import React, { ChangeEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport './ColorBar.scss';\n\ninterface ColorBarProps {\n  dispatch: Dispatch;\n  color: string;\n}\n\nfunction ColorBar({ dispatch, color }: ColorBarProps) {\n  const handleChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    dispatch(drawActions.setColor(value));\n  };\n\n  return <input className=\"color-input\" value={color} type=\"color\" name=\"color\" onChange={handleChange} />;\n}\n\nfunction mapStateToProps({ drawReducer: { dispatch, color } }: RootSate) {\n  return { dispatch, color };\n}\n\nexport default connect(mapStateToProps)(React.memo(ColorBar));\n","export default __webpack_public_path__ + \"static/media/pencil.d161d2e9.svg\";","import { connect } from 'react-redux';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { drawConstants } from '../../../../core/constants/draw.constants';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport pencil from '../../../../assets/img/pencil.svg';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport React, { useCallback } from 'react';\n\ninterface PaintBrushProps {\n  dispatch: Dispatch;\n  tool: string | null;\n}\n\nfunction PaintBrush({ dispatch, tool }: PaintBrushProps) {\n  const handleClick = useCallback(() => {\n    if (tool === drawConstants.PAINTBRUSH) {\n      dispatch(drawActions.noTool());\n    } else {\n      dispatch(drawActions.paintbrush());\n    }\n  }, [dispatch, tool]);\n\n  return (\n    <PaintButton name={drawConstants.PAINTBRUSH} onClick={handleClick}>\n      <img src={pencil} alt=\"\" />\n    </PaintButton>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { dispatch, tool } }: RootSate) {\n  return { dispatch, tool };\n}\n\nexport default connect(mapStateToProps)(React.memo(PaintBrush));\n","export default __webpack_public_path__ + \"static/media/circle.dddf140d.svg\";","import { connect } from 'react-redux';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport circle from '../../../../assets/img/circle.svg';\nimport { drawConstants } from '../../../../core/constants/draw.constants';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport React, { useCallback } from 'react';\n\ninterface CircleProps {\n  dispatch: Dispatch;\n  tool: string | null;\n}\n\nfunction Circle({ dispatch, tool }: CircleProps): JSX.Element {\n  const handleClick = useCallback(() => {\n    if (tool === drawConstants.CIRCLE) {\n      dispatch(drawActions.noTool());\n    } else {\n      dispatch(drawActions.circle());\n    }\n  }, [tool, dispatch]);\n\n  return (\n    <PaintButton name={drawConstants.CIRCLE} onClick={handleClick}>\n      <img src={circle} alt=\"circle\" />\n    </PaintButton>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { dispatch, tool } }: RootSate) {\n  return { dispatch, tool };\n}\n\nexport default connect(mapStateToProps)(React.memo(Circle));\n","export default __webpack_public_path__ + \"static/media/line.71e38afd.svg\";","import { connect } from 'react-redux';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport line from '../../../../assets/img/line.svg';\nimport { drawConstants } from '../../../../core/constants/draw.constants';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport React, { useCallback } from 'react';\n\ninterface LineProps {\n  dispatch: Dispatch;\n  tool: string | null;\n}\n\nfunction Line({ dispatch, tool }: LineProps): JSX.Element {\n  const handleClick = useCallback(() => {\n    if (tool === drawConstants.LINE) {\n      dispatch(drawActions.noTool());\n    } else {\n      dispatch(drawActions.line());\n    }\n  }, [tool, dispatch]);\n\n  return (\n    <PaintButton name={drawConstants.LINE} onClick={handleClick}>\n      <img src={line} alt=\"line\" />\n    </PaintButton>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { dispatch, tool } }: RootSate) {\n  return { dispatch, tool };\n}\n\nexport default connect(mapStateToProps)(React.memo(Line));\n","export default __webpack_public_path__ + \"static/media/hexagon.5fee026a.svg\";","import { connect } from 'react-redux';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { drawConstants } from '../../../../core/constants/draw.constants';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport hexagon from '../../../../assets/img/hexagon.svg';\nimport React, { useCallback } from 'react';\n\ninterface HexagonProps {\n  dispatch: Dispatch;\n  tool: string | null;\n}\n\nfunction Hexagon({ dispatch, tool }: HexagonProps): JSX.Element {\n  const handleClick = useCallback(() => {\n    if (tool === drawConstants.HEXAGON) {\n      dispatch(drawActions.noTool());\n    } else {\n      dispatch(drawActions.hexagon());\n    }\n  }, [tool, dispatch]);\n\n  return (\n    <PaintButton name={drawConstants.HEXAGON} onClick={handleClick}>\n      <img src={hexagon} alt=\"hexagon\" />\n    </PaintButton>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { dispatch, tool } }: RootSate) {\n  return { dispatch, tool };\n}\n\nexport default connect(mapStateToProps)(React.memo(Hexagon));\n","export default __webpack_public_path__ + \"static/media/rectangle.19aa566b.svg\";","import { connect } from 'react-redux';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { drawConstants } from '../../../../core/constants/draw.constants';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport rectangle from '../../../../assets/img/rectangle.svg';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport React, { useCallback } from 'react';\n\ninterface RectangleProps {\n  dispatch: Dispatch;\n  tool: string | null;\n}\n\nfunction Rectangle({ dispatch, tool }: RectangleProps): JSX.Element {\n  const handleClick = useCallback(() => {\n    if (tool === drawConstants.RECTANGLE) {\n      dispatch(drawActions.noTool());\n    } else {\n      dispatch(drawActions.rectangle());\n    }\n  }, [tool, dispatch]);\n\n  return (\n    <PaintButton name={drawConstants.RECTANGLE} onClick={handleClick}>\n      <img src={rectangle} alt=\"rectangle\" />\n    </PaintButton>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { dispatch, tool } }: RootSate) {\n  return { dispatch, tool };\n}\n\nexport default connect(mapStateToProps)(React.memo(Rectangle));\n","export default __webpack_public_path__ + \"static/media/star.103f4316.svg\";","import { drawActions } from '../../../../core/actions/draw.actions';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { drawConstants } from '../../../../core/constants/draw.constants';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport star from '../../../../assets/img/star.svg';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport { connect } from 'react-redux';\nimport React, { useCallback } from 'react';\n\ninterface StarProps {\n  dispatch: Dispatch;\n  tool: string | null;\n}\n\nfunction Star({ dispatch, tool }: StarProps): JSX.Element {\n  const handleClick = useCallback(() => {\n    if (tool === drawConstants.STAR) {\n      dispatch(drawActions.noTool());\n    } else {\n      dispatch(drawActions.star());\n    }\n  }, [tool, dispatch]);\n\n  return (\n    <PaintButton name={drawConstants.STAR} onClick={handleClick}>\n      <img src={star} alt=\"star\" />\n    </PaintButton>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { dispatch, tool } }: RootSate) {\n  return { dispatch, tool };\n}\n\nexport default connect(mapStateToProps)(React.memo(Star));\n","export default __webpack_public_path__ + \"static/media/points.ce4d7f60.svg\";","import { connect } from 'react-redux';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport Circle from '../Circle/Circle';\nimport Line from '../Line/Line';\nimport Polygon from '../Hexagon/Hexagon';\nimport Rectangle from '../Rectangle/Rectangle';\nimport Star from '../Star/Star';\nimport './ShapeBar.scss';\nimport points from '../../../../assets/img/points.svg';\nimport { useCallback } from 'react';\n\ninterface ShapeBarProps {\n  dispatch: Dispatch;\n  isShowedShapeBar: boolean;\n}\n\nfunction ShapeBar({ dispatch, isShowedShapeBar }: ShapeBarProps): JSX.Element {\n  const handleClick = useCallback(() => {\n    if (isShowedShapeBar) {\n      dispatch(drawActions.hideShapeBar());\n    } else {\n      dispatch(drawActions.showShapeBar());\n    }\n  }, [isShowedShapeBar, dispatch]);\n\n  return (\n    <div className=\"shape-bar\">\n      <PaintButton name=\"shape-bar\" onClick={handleClick}>\n        <img src={points} alt=\"\" />\n      </PaintButton>\n      {isShowedShapeBar && (\n        <ul className=\"shape-bar__setting\">\n          <li className=\"shape-bar__item\">\n            <Line />\n          </li>\n          <li className=\"shape-bar__item\">\n            <Circle />\n          </li>\n          <li className=\"shape-bar__item\">\n            <Rectangle />\n          </li>\n          <li className=\"shape-bar__item\">\n            <Star />\n          </li>\n          <li className=\"shape-bar__item\">\n            <Polygon />\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { dispatch, isShowedShapeBar } }: RootSate) {\n  return { dispatch, isShowedShapeBar };\n}\n\nexport default connect(mapStateToProps)(ShapeBar);\n","import { ChangeEvent, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport './SizeBar.scss';\n\ninterface SizeBarProps {\n  isShowedSizeBar: boolean;\n  size: string;\n  dispatch: Dispatch;\n}\n\nfunction SizeBar({ isShowedSizeBar, size, dispatch }: SizeBarProps): JSX.Element {\n  const handleClick = useCallback(() => {\n    if (isShowedSizeBar) {\n      dispatch(drawActions.hideSizeBar());\n    } else {\n      dispatch(drawActions.showSizeBar());\n    }\n  }, [isShowedSizeBar, dispatch]);\n\n  const handleChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    dispatch(drawActions.setSize(value));\n  };\n\n  return (\n    <div className=\"size-bar\">\n      <PaintButton name=\"size-bar\" onClick={handleClick}>\n        size\n      </PaintButton>\n      {isShowedSizeBar && (\n        <div className=\"size-bar__setting\">\n          <input type=\"range\" name=\"range\" min=\"1\" max=\"50\" value={size} onChange={handleChange} />\n          <span>{size}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { isShowedSizeBar, size, dispatch } }: RootSate) {\n  return { isShowedSizeBar, size, dispatch };\n}\n\nexport default connect(mapStateToProps)(SizeBar);\n","import React from 'react';\nimport ColorBar from '../ColorBar/ColorBar';\nimport PaintBrush from '../PaintBrush/PaintBrush';\nimport ShapeBar from '../ShapeBar/ShapeBar';\nimport SizeBar from '../SizeBar/SizeBar';\nimport './DrawBar.scss';\n\nfunction DrawBar(): JSX.Element {\n  return (\n    <ul className=\"drawbar\">\n      <li className=\"drawbar__item\">\n        <PaintBrush />\n      </li>\n      <li className=\"drawbar__item\">\n        <ShapeBar />\n      </li>\n      <li className=\"drawbar__item\">\n        <SizeBar />\n      </li>\n      <li className=\"drawbar__item\">\n        <ColorBar />\n      </li>\n    </ul>\n  );\n}\n\nexport default React.memo(DrawBar);\n","import { database } from '../../firebase';\n\nexport const firebaseDbService = {\n  sendImg,\n  onImages,\n};\n\nexport interface Image {\n  email: string;\n  image: string;\n}\n\nasync function sendImg(image: string, email: string): Promise<void> {\n  database.ref().child('images').push({ image, email });\n}\n\nasync function onImages(): Promise<Record<string, Image>> {\n  return new Promise((resolve) => {\n    database\n      .ref()\n      .child('images')\n      .on('value', (snapshot) => {\n        const data = snapshot.val();\n        resolve(data || {});\n      });\n  });\n}\n","export default __webpack_public_path__ + \"static/media/disk.4e36d248.svg\";","import React, { useCallback, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { User } from '../../../../core/actions/auth.actions';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport { firebaseDbService } from '../../../../core/services/firebase.db.service';\nimport disk from '../../../../assets/img/disk.svg';\nimport { Id, toast, ToastContainer } from 'react-toastify';\n\ninterface SaveButtonProps {\n  img: HTMLImageElement;\n  user: User;\n  isClean: boolean;\n}\n\ntoast.configure();\nlet toastId: Id;\n\nfunction SaveButton({ img, user, isClean }: SaveButtonProps) {\n  const currentImg = useRef<string>('');\n\n  const handleClick = useCallback(async () => {\n    if (isClean) {\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error('Error: the template is clean', { position: toast.POSITION.TOP_CENTER });\n      }\n    } else if (currentImg.current === img.src) {\n      if (!toast.isActive(toastId)) {\n        toastId = toast.error('Error: this image is already saved', { position: toast.POSITION.TOP_CENTER });\n      }\n    } else {\n      try {\n        await firebaseDbService.sendImg(img.src, user.email);\n        toast.info('image saved', { position: toast.POSITION.TOP_CENTER });\n      } catch ({ message }) {\n        toast.error(message, { position: toast.POSITION.TOP_CENTER });\n      }\n    }\n\n    currentImg.current = img.src;\n  }, [isClean, img, user]);\n\n  return (\n    <div>\n      <ToastContainer />\n      <PaintButton onClick={handleClick}>\n        <img src={disk} alt=\"\" />\n      </PaintButton>\n    </div>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { img, isClean }, authReducer: { user } }: RootSate) {\n  return { img, user, isClean };\n}\n\nexport default connect(mapStateToProps)(React.memo(SaveButton));\n","const SCALE_INIT = 0;\nconst points: Array<Point> = [];\n\ninterface Point {\n  pointX: number;\n  pointY: number;\n  drag: boolean;\n  color: string;\n  size: string;\n}\n\nexport const drawService = {\n  redraw,\n  addPoint,\n  clearFromPaintbrush,\n  clearCanvas,\n  drawPoint,\n  drawLine,\n  drawCircle,\n  drawRectangle,\n  drawImage,\n  createImg,\n  drawStar,\n  drawHexagon,\n  createContext,\n};\n\nfunction redraw(context: CanvasRenderingContext2D): void {\n  clearCanvas(context);\n  context.lineJoin = 'round';\n\n  points.forEach((point, index, arr) => {\n    context.beginPath();\n    if (point.drag && index) {\n      context.moveTo(arr[index - 1].pointX, arr[index - 1].pointY);\n    } else {\n      context.moveTo(point.pointX - 1, point.pointY);\n    }\n\n    context.lineTo(point.pointX, point.pointY);\n    context.closePath();\n    context.strokeStyle = point.color;\n    context.lineWidth = +point.size;\n    context.stroke();\n  });\n}\n\nfunction addPoint(pointX: number, pointY: number, drag: boolean, color: string, size: string): void {\n  points.push({\n    pointX,\n    pointY,\n    drag,\n    color,\n    size,\n  });\n}\n\nfunction clearFromPaintbrush(): void {\n  points.splice(0, points.length);\n}\n\nfunction clearCanvas(context: CanvasRenderingContext2D): void {\n  context.clearRect(SCALE_INIT, SCALE_INIT, context.canvas.width, context.canvas.height);\n}\n\nfunction drawPoint(\n  context: CanvasRenderingContext2D,\n  mouseX: number,\n  mouseY: number,\n  color: string,\n  size: string,\n  img: HTMLImageElement,\n): void {\n  addPoint(mouseX, mouseY, true, color, size);\n  redraw(context);\n  drawImage(context, img);\n}\n\nfunction drawLine(\n  context: CanvasRenderingContext2D,\n  size: string,\n  color: string,\n  startX: number,\n  startY: number,\n  mouseX: number,\n  mouseY: number,\n  img: HTMLImageElement,\n): void {\n  redraw(context);\n  context.lineWidth = +size;\n  context.strokeStyle = color;\n  context.beginPath();\n  context.moveTo(startX, startY);\n  context.lineTo(mouseX, mouseY);\n  context.closePath();\n  context.stroke();\n  drawImage(context, img);\n}\n\nfunction drawCircle(\n  context: CanvasRenderingContext2D,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number,\n  color: string,\n  img: HTMLImageElement,\n): void {\n  const kappa = 0.5522848;\n  const ox = (width / 2) * kappa; // control point offset horizontal\n  const oy = (height / 2) * kappa; // control point offset vertical\n  const xe = startX + width; // x-end\n  const ye = startY + height; // y-end\n  const xm = startX + width / 2; // x-middle\n  const ym = startY + height / 2; // y-middle\n\n  redraw(context);\n  context.fillStyle = color;\n  context.beginPath();\n  context.moveTo(startX, ym);\n  context.bezierCurveTo(startX, ym - oy, xm - ox, startY, xm, startY);\n  context.bezierCurveTo(xm + ox, startY, xe, ym - oy, xe, ym);\n  context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  context.bezierCurveTo(xm - ox, ye, startX, ym + oy, startX, ym);\n  context.closePath();\n  context.fill();\n  drawImage(context, img);\n}\n\nfunction drawRectangle(\n  context: CanvasRenderingContext2D,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number,\n  color: string,\n  img: HTMLImageElement,\n): void {\n  redraw(context);\n  context.fillStyle = color;\n  context.beginPath();\n  context.fillRect(startX, startY, width, height);\n  context.closePath();\n  drawImage(context, img);\n}\n\nfunction drawStar(\n  context: CanvasRenderingContext2D,\n  startX: number,\n  startY: number,\n  outerRadius: number,\n  color: string,\n  img: HTMLImageElement,\n): void {\n  const spikes = 5;\n  const step = Math.PI / spikes;\n  let rot = (Math.PI / 2) * 3;\n  let x = startX;\n  let y = startY;\n\n  redraw(context);\n  context.fillStyle = color;\n  context.beginPath();\n  context.moveTo(startX, startY - outerRadius);\n\n  new Array(spikes).fill(null).forEach(() => {\n    x = startX + Math.cos(rot) * outerRadius;\n    y = startY + Math.sin(rot) * outerRadius;\n    context.lineTo(x, y);\n    rot += step;\n    x = startX + Math.cos(rot) * (outerRadius / 2);\n    y = startY + Math.sin(rot) * (outerRadius / 2);\n    context.lineTo(x, y);\n    rot += step;\n  });\n\n  context.lineTo(startX, startY - outerRadius);\n  context.closePath();\n  context.fill();\n  drawImage(context, img);\n}\n\nfunction drawHexagon(\n  context: CanvasRenderingContext2D,\n  startX: number,\n  startY: number,\n  sideLength: number,\n  color: string,\n  img: HTMLImageElement,\n): void {\n  const hexagonAngle = 0.523598776; //30 degrees in radians\n  const hexHeight = Math.sin(hexagonAngle) * sideLength;\n  const hexRadius = Math.cos(hexagonAngle) * sideLength;\n  const hexRectangleWidth = 2 * hexRadius;\n  const hexRectangleHeight = sideLength + 2 * hexHeight;\n\n  redraw(context);\n  context.fillStyle = color;\n  context.beginPath();\n  context.moveTo(startX + hexRadius, startY);\n  context.lineTo(startX + hexRectangleWidth, startY + hexHeight);\n  context.lineTo(startX + hexRectangleWidth, startY + hexHeight + sideLength);\n  context.lineTo(startX + hexRadius, startY + hexRectangleHeight);\n  context.lineTo(startX, startY + sideLength + hexHeight);\n  context.lineTo(startX, startY + hexHeight);\n  context.closePath();\n  context.fill();\n  drawImage(context, img);\n}\n\nfunction drawImage(context: CanvasRenderingContext2D, img: HTMLImageElement): void {\n  if (img) {\n    context.drawImage(img, SCALE_INIT, SCALE_INIT);\n  }\n}\n\nfunction createImg(canvas: HTMLCanvasElement): HTMLImageElement {\n  const image = canvas.toDataURL('image/png');\n  const img = new Image();\n\n  img.src = image;\n\n  return img;\n}\n\nfunction createContext(canvas: HTMLCanvasElement): CanvasRenderingContext2D | null {\n  const context = canvas.getContext('2d');\n\n  if (context) {\n    context.globalCompositeOperation = 'destination-over';\n  }\n\n  return context;\n}\n","export default __webpack_public_path__ + \"static/media/trash.2d44fa45.svg\";","import NavBar from '../NavBar/NavBar';\nimport DrawBar from '../DrawBar/DrawBar';\nimport SaveButton from '../SaveButton/SaveButton';\nimport PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport { connect } from 'react-redux';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport { drawService } from '../../../../core/services/draw.service';\nimport './PaintToolBar.scss';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport trash from '../../../../assets/img/trash.svg';\nimport React, { useCallback } from 'react';\n\ninterface PaintToolBarProps {\n  context: CanvasRenderingContext2D | null;\n  dispatch: Dispatch;\n}\n\nfunction PaintToolBar({ context, dispatch }: PaintToolBarProps) {\n  const handleClick = useCallback(() => {\n    dispatch(drawActions.deleteImg());\n\n    if (context) {\n      drawService.clearCanvas(context);\n      dispatch(drawActions.clear());\n    }\n  }, [dispatch, context]);\n\n  return (\n    <div className=\"paint-toolbar\">\n      <NavBar />\n      <DrawBar />\n      <div>\n        <div className=\"clear-btn\">\n          <PaintButton onClick={handleClick}>\n            <img src={trash} alt=\"\" />\n          </PaintButton>\n        </div>\n        <SaveButton />\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { context, dispatch } }: RootSate) {\n  return { context, dispatch };\n}\n\nexport default connect(mapStateToProps)(React.memo(PaintToolBar));\n","import { MouseEvent, useCallback, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { drawActions } from '../../../../core/actions/draw.actions';\nimport { drawConstants } from '../../../../core/constants/draw.constants';\nimport { Dispatch } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport { drawService } from '../../../../core/services/draw.service';\nimport './MainView.scss';\n\nconst CANVAS_WIDTH = 712;\nconst CANVAS_HEIGHT = 632;\nconst CANVAS_MARGIN = 50;\n\ninterface MainViewProps {\n  tool: string;\n  isDraw: boolean;\n  color: string;\n  size: string;\n  dispatch: Dispatch;\n  img: HTMLImageElement;\n  context: CanvasRenderingContext2D | null;\n}\n\nfunction MainView({ tool, isDraw, color, size, dispatch, img, context }: MainViewProps): JSX.Element {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const mainviewRef = useRef<HTMLDivElement | null>(null);\n  const startX = useRef<number>(0);\n  const startY = useRef<number>(0);\n\n  const handleMouseDown = ({ clientX, clientY }: MouseEvent) => {\n    dispatch(drawActions.hideSizeBar());\n    dispatch(drawActions.hideShapeBar());\n    if (canvasRef && canvasRef.current && context && tool) {\n      dispatch(drawActions.startDraw());\n      const mouseX = clientX - canvasRef.current.offsetLeft;\n      const mouseY = clientY - canvasRef.current.offsetTop;\n\n      if (tool === drawConstants.PAINTBRUSH) {\n        drawService.drawPoint(context, mouseX, mouseY, color, size, img);\n      } else {\n        startX.current = mouseX;\n        startY.current = mouseY;\n      }\n    }\n  };\n\n  const handleMouseMove = ({ clientX, clientY }: MouseEvent) => {\n    if (canvasRef && canvasRef.current && context) {\n      const mouseX = clientX - canvasRef.current.offsetLeft;\n      const mouseY = clientY - canvasRef.current.offsetTop;\n      const width = mouseX - startX.current;\n      const height = mouseY - startY.current;\n\n      if (isDraw && tool === drawConstants.PAINTBRUSH) {\n        drawService.drawPoint(context, mouseX, mouseY, color, size, img);\n      } else if (isDraw && tool === drawConstants.LINE) {\n        drawService.drawLine(context, size, color, startX.current, startY.current, mouseX, mouseY, img);\n      } else if (isDraw && tool === drawConstants.CIRCLE) {\n        drawService.drawCircle(context, startX.current, startY.current, width, height, color, img);\n      } else if (isDraw && tool === drawConstants.RECTANGLE) {\n        drawService.drawRectangle(context, startX.current, startY.current, width, height, color, img);\n      } else if (isDraw && tool === drawConstants.STAR) {\n        const outerRadius = width + height;\n        drawService.drawStar(context, startX.current, startY.current, outerRadius, color, img);\n      } else if (isDraw && tool === drawConstants.HEXAGON) {\n        drawService.drawHexagon(context, startX.current, startY.current, width, color, img);\n      }\n    }\n  };\n\n  const handleMouseUp = useCallback(() => {\n    if (canvasRef && canvasRef.current) {\n      dispatch(drawActions.setImg(drawService.createImg(canvasRef.current)));\n    }\n    drawService.clearFromPaintbrush();\n    dispatch(drawActions.stopDraw());\n  }, [dispatch]);\n\n  const handleMouseLeave = () => {\n    if (tool === drawConstants.PAINTBRUSH && canvasRef && canvasRef.current) {\n      dispatch(drawActions.setImg(drawService.createImg(canvasRef.current)));\n      drawService.clearFromPaintbrush();\n    }\n  };\n\n  const handleResize = useCallback(() => {\n    if (canvasRef && canvasRef.current && mainviewRef && mainviewRef.current) {\n      canvasRef.current.width = mainviewRef.current.clientWidth;\n      canvasRef.current.height = mainviewRef.current.clientHeight;\n      dispatch(drawActions.setContext(drawService.createContext(canvasRef.current)));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (canvasRef && canvasRef.current) {\n      canvasRef.current.height = window.innerHeight;\n      if (window.innerWidth < CANVAS_WIDTH) {\n        canvasRef.current.width = window.innerWidth - CANVAS_MARGIN;\n      }\n\n      dispatch(drawActions.setContext(drawService.createContext(canvasRef.current)));\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [dispatch, handleResize]);\n\n  useEffect(() => {\n    document.addEventListener('mouseup', handleMouseUp);\n\n    return () => document.removeEventListener('mouseup', handleMouseUp);\n  }, [handleMouseUp]);\n\n  return (\n    <div className=\"mainview\" ref={mainviewRef}>\n      <canvas\n        className=\"mainview__canvas\"\n        id=\"mainview\"\n        ref={canvasRef}\n        width={CANVAS_WIDTH}\n        height={CANVAS_HEIGHT}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n      ></canvas>\n    </div>\n  );\n}\n\nfunction mapStateToProps({ drawReducer: { tool, isDraw, color, dispatch, size, img, context } }: RootSate) {\n  return { tool, isDraw, color, dispatch, size, img, context };\n}\n\nexport default connect(mapStateToProps)(MainView);\n","import './Paint.scss';\nimport PaintToolBar from './components/PaintToolBar/PaintToolBar';\nimport MainView from './components/MainView/MainView';\nimport React from 'react';\n\nfunction Paint(): JSX.Element {\n  return (\n    <div className=\"paint\">\n      <MainView />\n      <PaintToolBar />\n    </div>\n  );\n}\n\nexport default React.memo(Paint);\n","export enum showConstants {\n  SUCCESS_DOWNLOAD = 'SUCCESS_DOWNLOAD',\n  FILTER_IMAGES = 'FILTER_IMAGES',\n  SET_IMAGES = 'SET_IMAGES',\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { showConstants } from '../constants/show.constants';\nimport { ShowState } from '../reducers/show.reducer';\nimport { firebaseDbService, Image } from '../services/firebase.db.service';\n\nexport const showActions = {\n  getImages,\n  filterImages,\n  setImages,\n};\n\ninterface SuccessDownloadAction {\n  type: typeof showConstants.SUCCESS_DOWNLOAD;\n  payload: Record<string, Image>;\n}\n\ninterface FilterImagesAction {\n  type: typeof showConstants.FILTER_IMAGES;\n  payload: string;\n}\n\ninterface SetImagesAction {\n  type: typeof showConstants.SET_IMAGES;\n  payload: Record<string, Image>;\n}\n\nexport type ShowAction = SuccessDownloadAction | FilterImagesAction | SetImagesAction;\n\nexport type ShowThunkAction = ThunkAction<void, ShowState, unknown, ShowAction>;\n\nfunction successDownload(data: Record<string, Image>): SuccessDownloadAction {\n  return {\n    type: showConstants.SUCCESS_DOWNLOAD,\n    payload: data,\n  };\n}\n\nfunction setImages(images: Record<string, Image>): SetImagesAction {\n  return {\n    type: showConstants.SET_IMAGES,\n    payload: images,\n  };\n}\n\nfunction filterImages(key: string): FilterImagesAction {\n  return {\n    type: showConstants.FILTER_IMAGES,\n    payload: key,\n  };\n}\n\nfunction getImages(): ShowThunkAction {\n  return (dispatch) => {\n    firebaseDbService.onImages().then((data) => {\n      dispatch(successDownload(data));\n    });\n  };\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { showActions } from '../../../../core/actions/show.actions';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport { Image } from '../../../../core/services/firebase.db.service';\nimport './GalleryList.scss';\n\ninterface GalleryListProps {\n  images: Record<string, Image>;\n  filtredKey: string;\n}\n\nfunction createImgList(images: Record<string, Image>, filtredKey: string) {\n  let filteredImages = Object.values(images);\n\n  if (filtredKey !== 'all') {\n    filteredImages = filteredImages.filter((item) => item.email === filtredKey);\n  }\n\n  return filteredImages.map((item, i, arr) => (\n    <li className=\"gallery-list__item\" id={i === arr.length - 1 ? 'last' : undefined} key={item.image}>\n      <img src={item.image} alt=\"\" />\n    </li>\n  ));\n}\n\nfunction GalleryList({ images, filtredKey }: GalleryListProps): JSX.Element {\n  const dispatch = useDispatch();\n  const imgList = useMemo(() => createImgList(images, filtredKey), [images, filtredKey]);\n\n  useEffect(() => {\n    dispatch(showActions.getImages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const last = document.querySelector('#last');\n\n    if (last) {\n      scrollIntoView(last, { block: 'center', inline: 'center' });\n    }\n  });\n\n  return <ul className=\"gallery-list\">{imgList}</ul>;\n}\n\nfunction mapStateToProps({ showReducer: { images, filtredKey } }: RootSate) {\n  return { images, filtredKey };\n}\n\nexport default connect(mapStateToProps)(React.memo(GalleryList));\n","import { AuthAction, User } from '../actions/auth.actions';\nimport { authConstants } from '../constants/auth.constants';\n\nconst initState = {\n  loading: false,\n  user: null,\n};\n\nexport interface AuthState {\n  loading: boolean;\n  user: User | null;\n}\n\nexport function authReducer(state = initState, action: AuthAction): AuthState {\n  switch (action.type) {\n    case authConstants.REQUEST:\n      return { ...state, loading: true };\n    case authConstants.SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        user: action.payload,\n      };\n    case authConstants.ERROR:\n      return { ...state, loading: false };\n    case authConstants.SIGNOUT:\n      return initState;\n    default:\n      return state;\n  }\n}\n","import { DrawActions } from '../actions/draw.actions';\nimport { drawConstants } from '../constants/draw.constants';\n\nconst initState = {\n  tool: null,\n  isDraw: false,\n  color: '#000',\n  isShowedSizeBar: false,\n  size: '5',\n  isShowedShapeBar: false,\n  img: null,\n  context: null,\n  isClean: true,\n};\n\nexport interface DrawState {\n  tool: string | null;\n  isDraw: boolean;\n  color: string;\n  isShowedSizeBar: boolean;\n  size: string;\n  isShowedShapeBar: boolean;\n  img: HTMLImageElement | null;\n  context: CanvasRenderingContext2D | null;\n  isClean: boolean;\n}\n\nexport function drawReducer(state = initState, action: DrawActions): DrawState {\n  switch (action.type) {\n    case drawConstants.NO_TOOL:\n      return { ...state, tool: null };\n    case drawConstants.PAINTBRUSH:\n      return { ...state, tool: drawConstants.PAINTBRUSH };\n    case drawConstants.LINE:\n      return { ...state, tool: drawConstants.LINE };\n    case drawConstants.RECTANGLE:\n      return { ...state, tool: drawConstants.RECTANGLE };\n    case drawConstants.CIRCLE:\n      return { ...state, tool: drawConstants.CIRCLE };\n    case drawConstants.STAR:\n      return { ...state, tool: drawConstants.STAR };\n    case drawConstants.HEXAGON:\n      return { ...state, tool: drawConstants.HEXAGON };\n    case drawConstants.START_DRAW:\n      return { ...state, isDraw: true, isClean: false };\n    case drawConstants.STOP_DRAW:\n      return { ...state, isDraw: false };\n    case drawConstants.SET_COLOR:\n      return { ...state, color: action.payload };\n    case drawConstants.SHOW_SIZE_BAR:\n      return { ...state, isShowedSizeBar: true };\n    case drawConstants.HIDE_SIZE_BAR:\n      return { ...state, isShowedSizeBar: false };\n    case drawConstants.SET_SIZE:\n      return { ...state, size: action.payload };\n    case drawConstants.SHOW_SHAPE_BAR:\n      return { ...state, isShowedShapeBar: true };\n    case drawConstants.HIDE_SHAPE_BAR:\n      return { ...state, isShowedShapeBar: false };\n    case drawConstants.SET_IMG:\n      return { ...state, img: action.payload };\n    case drawConstants.DELETE_IMG:\n      return { ...state, img: null };\n    case drawConstants.SET_CONTEXT:\n      return { ...state, context: action.payload };\n    case drawConstants.CLEAR:\n      return { ...state, isClean: true };\n    default:\n      return state;\n  }\n}\n","import { ShowAction } from '../actions/show.actions';\nimport { showConstants } from '../constants/show.constants';\nimport { Image } from '../services/firebase.db.service';\n\nconst initState = {\n  images: {},\n  filtredImages: {},\n  filtredKey: 'all',\n};\n\nexport interface ShowState {\n  images: Record<string, Image>;\n  filtredImages: Record<string, Image>;\n  filtredKey: string;\n}\n\nexport function showReducer(state = initState, action: ShowAction): ShowState {\n  switch (action.type) {\n    case showConstants.SUCCESS_DOWNLOAD:\n      return { ...state, images: { ...action.payload } };\n    case showConstants.FILTER_IMAGES:\n      return { ...state, filtredKey: action.payload };\n    case showConstants.SET_IMAGES:\n      return { ...state, filtredImages: { ...action.payload } };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { authReducer } from './auth.reducer';\nimport { drawReducer } from './draw.reducer';\nimport { showReducer } from './show.reducer';\n\nexport const rootReducer = combineReducers({\n  authReducer,\n  drawReducer,\n  showReducer,\n});\n\nexport type RootSate = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, createStore } from 'redux';\nimport { rootReducer } from '../reducers/root.reducer';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type Dispatch = typeof store.dispatch;\n","import React, { ChangeEvent, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { showActions } from '../../../../core/actions/show.actions';\nimport { store } from '../../../../core/helpers/store';\nimport { RootSate } from '../../../../core/reducers/root.reducer';\nimport { Image } from '../../../../core/services/firebase.db.service';\nimport './Filter.scss';\n\ninterface FilterProps {\n  images: Record<string, Image>;\n  filtredKey: string;\n}\n\nfunction createOptions(images: Record<string, Image>): Array<JSX.Element> {\n  const emails = Object.values(images).map((item) => item.email);\n\n  emails.push('all');\n\n  return Array.from(new Set(emails)).map((item) => {\n    return (\n      <option key={item} value={item}>\n        {item}\n      </option>\n    );\n  });\n}\n\nfunction Filter({ filtredKey, images }: FilterProps) {\n  const options = useMemo(() => createOptions(images), [images]);\n\n  const handleChange = ({ target: { value } }: ChangeEvent<HTMLSelectElement>) => {\n    store.dispatch(showActions.filterImages(value));\n  };\n\n  return (\n    <select className=\"filter\" value={filtredKey} onChange={handleChange}>\n      {options}\n    </select>\n  );\n}\n\nfunction mapStateToProps({ showReducer: { filtredKey, images } }: RootSate) {\n  return { filtredKey, images };\n}\n\nexport default connect(mapStateToProps)(React.memo(Filter));\n","import PaintButton from '../../../../core/components/PaintButton/PaintButton';\nimport SignoutButton from '../../../../core/components/SignoutButton/SignoutButton';\nimport './GalleryToolBar.scss';\nimport pencil from '../../../../assets/img/pencil.svg';\nimport { history } from '../../../../core/helpers/history';\nimport { routeConstants } from '../../../../core/constants/route.constants';\nimport Filter from '../Filter/Filter';\nimport React, { useCallback } from 'react';\n\nfunction GalleryToolBar(): JSX.Element {\n  const handleClick = useCallback(() => {\n    history.push(routeConstants.PAINT);\n  }, []);\n\n  return (\n    <div className=\"gallery-toolbar\">\n      <SignoutButton />\n      <Filter />\n      <PaintButton onClick={handleClick}>\n        <img src={pencil} alt=\"\" />\n      </PaintButton>\n    </div>\n  );\n}\n\nexport default React.memo(GalleryToolBar);\n","import React from 'react';\nimport GalleryList from './components/GalleryList/GalleryList';\nimport GalleryToolBar from './components/GalleryToolBar/GalleryToolBar';\nimport './Gallery.scss';\n\nfunction Gallery(): JSX.Element {\n  return (\n    <div className=\"gallery\">\n      <GalleryToolBar />\n      <GalleryList />\n    </div>\n  );\n}\n\nexport default React.memo(Gallery);\n","import './App.scss';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './core/components/PrivateRoute/PrivateRoute';\nimport { routeConstants } from './core/constants/route.constants';\nimport Signin from './pages/Signin/Signin';\nimport Register from './pages/Register/Register';\nimport { history } from './core/helpers/history';\nimport Paint from './pages/Paint/Paint';\nimport Gallery from './pages/Gallery/Gallery';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <Router history={history}>\n          <Switch>\n            <PrivateRoute exact path={routeConstants.GALLERY} component={Gallery} />\n            <PrivateRoute path={routeConstants.PAINT} component={Paint} />\n            <Route path={routeConstants.SIGNIN} component={Signin} />\n            <Route path={routeConstants.REGISTER} component={Register} />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport { store } from './core/helpers/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}